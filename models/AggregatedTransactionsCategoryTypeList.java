package io.model;

import java.io.IOException;
import com.fasterxml.jackson.annotation.*;

public enum AggregatedTransactionsCategoryTypeList {
    ALIMONY_OR_MAINTENANCE_PAYMENTS, AMBULANCE_INSURANCE, ANIMAL_PURCHASES, ANNUITIES_INCOME, CAPITAL_BUILDING_COSTS, CHILD_CARE, CHILD_SUPPORT_PAYMENT_INCOME, CLOTHING_AND_ACCESSORIES, CONTRACTED_RECREATIONAL_MEMBERSHIPS_AND_SUBSCRIPTIONS, CREDIT_CARD_REPAYMENTS, DISHONOUR_FEES_AND_FINES, DIVIDENDS_INCOME, FINANCE_REPAYMENTS_EXCLUDING_MORTGAGES_AND_CREDIT_CARDS, FINANCIAL_INSTITUTION_CHARGES_FEES_AND_RELATED_DUTIES_AND_TAXES, FOREIGN_SOURCED_INCOME, GAMBLING, GIFTS_AND_DONATIONS, GOVERNMENT_BENEFITS, GOVERNMENT_BENEFITS_ABSTUDY, GOVERNMENT_BENEFITS_AGE_PENSION, GOVERNMENT_BENEFITS_AUSTUDY, GOVERNMENT_BENEFITS_CARER_PAYMENT, GOVERNMENT_BENEFITS_CRISIS_PAYMENT, GOVERNMENT_BENEFITS_DISABILITY_SUPPORT_PENSION, GOVERNMENT_BENEFITS_FAMILY_ALLOWANCE, GOVERNMENT_BENEFITS_MOBILITY_ALLOWANCE, GOVERNMENT_BENEFITS_NEWSTART, GOVERNMENT_BENEFITS_OTHER, GOVERNMENT_BENEFITS_PARENTING_PAYMENT, GOVERNMENT_BENEFITS_WIDOWS_ALLOWANCE, GOVERNMENT_BENEFITS_YOUTH_ALLOWANCE, GROCERIES, HECS, HIGHER_EDUCATION, HOLIDAYS_TRAVEL_AND_ACCOMMODATION, HOSPITAL_MEDICAL_AND_DENTAL_INSURANCE, HOUSEHOLD_AND_GARDEN_FURNISHINGS_AND_EQUIPMENT, HOUSEHOLD_SERVICES, HOUSE_AND_CONTENTS_INSURANCE, INCOME_TAX, INTEREST_INCOME, INVESTMENT_EXPENSES, JEWELLERY_AND_WATCHES, LIFE_INSURANCE, MEDICAL_AND_HEALTH, MORTGAGE_REPAYMENTS, NET_SALARY, NURSING_HOME_CHARGES, OTHER, OTHER_INCOME, OTHER_INSURANCE, PERSONAL_CARE, PRIVATE_PENSION_INCOME, PRIVATE_SCHOOLING_EXPENSES, PROFESSIONAL_SERVICES_UNION_AND_ASSOCIATION_FEES, PROPERTY_MAINTENANCE, PUBLIC_OR_GOVERNMENT_PRIMARY_AND_SECONDARY_EDUCATION, PURCHASE_OF_PROPERTY, RECREATION_AND_ENTERTAINMENT, RENTAL_INCOME, RENT_PAYMENTS, SICKNESS_AND_PERSONAL_ACCIDENT_INSURANCE, STRATA_FEES, SUPERANNUATION_INCOME, SUPERANNUATION_PAYMENTS, TAX_AND_GOVERNMENT_FEES_AND_PAYMENTS, TAX_REFUND, TELEPHONE_INTERNET_PAY_TV_AND_MEDIA_STREAMING_SUBSCRIPTIONS, TRANSPORT, UTILITIES, VEHICLE_INSURANCE, VEHICLE_PURCHASE, WORKERS_COMPENSATION_INCOME;

    @JsonValue
    public String toValue() {
        switch (this) {
            case ALIMONY_OR_MAINTENANCE_PAYMENTS: return "Alimony or Maintenance Payments";
            case AMBULANCE_INSURANCE: return "Ambulance Insurance";
            case ANIMAL_PURCHASES: return "Animal Purchases";
            case ANNUITIES_INCOME: return "Annuities Income";
            case CAPITAL_BUILDING_COSTS: return "Capital Building Costs";
            case CHILD_CARE: return "Child Care";
            case CHILD_SUPPORT_PAYMENT_INCOME: return "Child Support Payment Income";
            case CLOTHING_AND_ACCESSORIES: return "Clothing and Accessories";
            case CONTRACTED_RECREATIONAL_MEMBERSHIPS_AND_SUBSCRIPTIONS: return "Contracted Recreational Memberships and Subscriptions";
            case CREDIT_CARD_REPAYMENTS: return "Credit Card Repayments";
            case DISHONOUR_FEES_AND_FINES: return "Dishonour Fees and Fines";
            case DIVIDENDS_INCOME: return "Dividends Income";
            case FINANCE_REPAYMENTS_EXCLUDING_MORTGAGES_AND_CREDIT_CARDS: return "Finance Repayments Excluding Mortgages and Credit Cards";
            case FINANCIAL_INSTITUTION_CHARGES_FEES_AND_RELATED_DUTIES_AND_TAXES: return "Financial Institution Charges, Fees and Related Duties and Taxes";
            case FOREIGN_SOURCED_INCOME: return "Foreign Sourced Income";
            case GAMBLING: return "Gambling";
            case GIFTS_AND_DONATIONS: return "Gifts and Donations";
            case GOVERNMENT_BENEFITS: return "Government Benefits";
            case GOVERNMENT_BENEFITS_ABSTUDY: return "Government Benefits - Abstudy";
            case GOVERNMENT_BENEFITS_AGE_PENSION: return "Government Benefits - Age Pension";
            case GOVERNMENT_BENEFITS_AUSTUDY: return "Government Benefits - Austudy";
            case GOVERNMENT_BENEFITS_CARER_PAYMENT: return "Government Benefits - Carer Payment";
            case GOVERNMENT_BENEFITS_CRISIS_PAYMENT: return "Government Benefits - Crisis Payment";
            case GOVERNMENT_BENEFITS_DISABILITY_SUPPORT_PENSION: return "Government Benefits - Disability Support Pension";
            case GOVERNMENT_BENEFITS_FAMILY_ALLOWANCE: return "Government Benefits - Family Allowance";
            case GOVERNMENT_BENEFITS_MOBILITY_ALLOWANCE: return "Government Benefits - Mobility Allowance";
            case GOVERNMENT_BENEFITS_NEWSTART: return "Government Benefits - Newstart";
            case GOVERNMENT_BENEFITS_OTHER: return "Government Benefits - Other";
            case GOVERNMENT_BENEFITS_PARENTING_PAYMENT: return "Government Benefits - Parenting Payment";
            case GOVERNMENT_BENEFITS_WIDOWS_ALLOWANCE: return "Government Benefits - Widows Allowance";
            case GOVERNMENT_BENEFITS_YOUTH_ALLOWANCE: return "Government Benefits - Youth Allowance";
            case GROCERIES: return "Groceries";
            case HECS: return "HECS";
            case HIGHER_EDUCATION: return "Higher Education";
            case HOLIDAYS_TRAVEL_AND_ACCOMMODATION: return "Holidays, Travel and Accommodation";
            case HOSPITAL_MEDICAL_AND_DENTAL_INSURANCE: return "Hospital, Medical and Dental Insurance";
            case HOUSEHOLD_AND_GARDEN_FURNISHINGS_AND_EQUIPMENT: return "Household and Garden Furnishings and Equipment";
            case HOUSEHOLD_SERVICES: return "Household Services";
            case HOUSE_AND_CONTENTS_INSURANCE: return "House and Contents Insurance";
            case INCOME_TAX: return "Income Tax";
            case INTEREST_INCOME: return "Interest Income";
            case INVESTMENT_EXPENSES: return "Investment Expenses";
            case JEWELLERY_AND_WATCHES: return "Jewellery and Watches";
            case LIFE_INSURANCE: return "Life Insurance";
            case MEDICAL_AND_HEALTH: return "Medical and Health";
            case MORTGAGE_REPAYMENTS: return "Mortgage Repayments";
            case NET_SALARY: return "Net Salary";
            case NURSING_HOME_CHARGES: return "Nursing Home Charges";
            case OTHER: return "Other";
            case OTHER_INCOME: return "Other Income";
            case OTHER_INSURANCE: return "Other Insurance";
            case PERSONAL_CARE: return "Personal Care";
            case PRIVATE_PENSION_INCOME: return "Private Pension Income";
            case PRIVATE_SCHOOLING_EXPENSES: return "Private Schooling Expenses";
            case PROFESSIONAL_SERVICES_UNION_AND_ASSOCIATION_FEES: return "Professional Services, Union and Association Fees";
            case PROPERTY_MAINTENANCE: return "Property Maintenance";
            case PUBLIC_OR_GOVERNMENT_PRIMARY_AND_SECONDARY_EDUCATION: return "Public or Government Primary and Secondary Education";
            case PURCHASE_OF_PROPERTY: return "Purchase of Property";
            case RECREATION_AND_ENTERTAINMENT: return "Recreation and Entertainment";
            case RENTAL_INCOME: return "Rental Income";
            case RENT_PAYMENTS: return "Rent Payments";
            case SICKNESS_AND_PERSONAL_ACCIDENT_INSURANCE: return "Sickness and Personal Accident Insurance";
            case STRATA_FEES: return "Strata Fees";
            case SUPERANNUATION_INCOME: return "Superannuation Income";
            case SUPERANNUATION_PAYMENTS: return "Superannuation Payments";
            case TAX_AND_GOVERNMENT_FEES_AND_PAYMENTS: return "Tax and Government Fees and Payments";
            case TAX_REFUND: return "Tax Refund";
            case TELEPHONE_INTERNET_PAY_TV_AND_MEDIA_STREAMING_SUBSCRIPTIONS: return "Telephone, Internet, Pay TV and Media Streaming Subscriptions";
            case TRANSPORT: return "Transport";
            case UTILITIES: return "Utilities";
            case VEHICLE_INSURANCE: return "Vehicle Insurance";
            case VEHICLE_PURCHASE: return "Vehicle Purchase";
            case WORKERS_COMPENSATION_INCOME: return "Workers Compensation Income";
        }
        return null;
    }

    @JsonCreator
    public static AggregatedTransactionsCategoryTypeList forValue(String value) throws IOException {
        if (value.equals("Alimony or Maintenance Payments")) return ALIMONY_OR_MAINTENANCE_PAYMENTS;
        if (value.equals("Ambulance Insurance")) return AMBULANCE_INSURANCE;
        if (value.equals("Animal Purchases")) return ANIMAL_PURCHASES;
        if (value.equals("Annuities Income")) return ANNUITIES_INCOME;
        if (value.equals("Capital Building Costs")) return CAPITAL_BUILDING_COSTS;
        if (value.equals("Child Care")) return CHILD_CARE;
        if (value.equals("Child Support Payment Income")) return CHILD_SUPPORT_PAYMENT_INCOME;
        if (value.equals("Clothing and Accessories")) return CLOTHING_AND_ACCESSORIES;
        if (value.equals("Contracted Recreational Memberships and Subscriptions")) return CONTRACTED_RECREATIONAL_MEMBERSHIPS_AND_SUBSCRIPTIONS;
        if (value.equals("Credit Card Repayments")) return CREDIT_CARD_REPAYMENTS;
        if (value.equals("Dishonour Fees and Fines")) return DISHONOUR_FEES_AND_FINES;
        if (value.equals("Dividends Income")) return DIVIDENDS_INCOME;
        if (value.equals("Finance Repayments Excluding Mortgages and Credit Cards")) return FINANCE_REPAYMENTS_EXCLUDING_MORTGAGES_AND_CREDIT_CARDS;
        if (value.equals("Financial Institution Charges, Fees and Related Duties and Taxes")) return FINANCIAL_INSTITUTION_CHARGES_FEES_AND_RELATED_DUTIES_AND_TAXES;
        if (value.equals("Foreign Sourced Income")) return FOREIGN_SOURCED_INCOME;
        if (value.equals("Gambling")) return GAMBLING;
        if (value.equals("Gifts and Donations")) return GIFTS_AND_DONATIONS;
        if (value.equals("Government Benefits")) return GOVERNMENT_BENEFITS;
        if (value.equals("Government Benefits - Abstudy")) return GOVERNMENT_BENEFITS_ABSTUDY;
        if (value.equals("Government Benefits - Age Pension")) return GOVERNMENT_BENEFITS_AGE_PENSION;
        if (value.equals("Government Benefits - Austudy")) return GOVERNMENT_BENEFITS_AUSTUDY;
        if (value.equals("Government Benefits - Carer Payment")) return GOVERNMENT_BENEFITS_CARER_PAYMENT;
        if (value.equals("Government Benefits - Crisis Payment")) return GOVERNMENT_BENEFITS_CRISIS_PAYMENT;
        if (value.equals("Government Benefits - Disability Support Pension")) return GOVERNMENT_BENEFITS_DISABILITY_SUPPORT_PENSION;
        if (value.equals("Government Benefits - Family Allowance")) return GOVERNMENT_BENEFITS_FAMILY_ALLOWANCE;
        if (value.equals("Government Benefits - Mobility Allowance")) return GOVERNMENT_BENEFITS_MOBILITY_ALLOWANCE;
        if (value.equals("Government Benefits - Newstart")) return GOVERNMENT_BENEFITS_NEWSTART;
        if (value.equals("Government Benefits - Other")) return GOVERNMENT_BENEFITS_OTHER;
        if (value.equals("Government Benefits - Parenting Payment")) return GOVERNMENT_BENEFITS_PARENTING_PAYMENT;
        if (value.equals("Government Benefits - Widows Allowance")) return GOVERNMENT_BENEFITS_WIDOWS_ALLOWANCE;
        if (value.equals("Government Benefits - Youth Allowance")) return GOVERNMENT_BENEFITS_YOUTH_ALLOWANCE;
        if (value.equals("Groceries")) return GROCERIES;
        if (value.equals("HECS")) return HECS;
        if (value.equals("Higher Education")) return HIGHER_EDUCATION;
        if (value.equals("Holidays, Travel and Accommodation")) return HOLIDAYS_TRAVEL_AND_ACCOMMODATION;
        if (value.equals("Hospital, Medical and Dental Insurance")) return HOSPITAL_MEDICAL_AND_DENTAL_INSURANCE;
        if (value.equals("Household and Garden Furnishings and Equipment")) return HOUSEHOLD_AND_GARDEN_FURNISHINGS_AND_EQUIPMENT;
        if (value.equals("Household Services")) return HOUSEHOLD_SERVICES;
        if (value.equals("House and Contents Insurance")) return HOUSE_AND_CONTENTS_INSURANCE;
        if (value.equals("Income Tax")) return INCOME_TAX;
        if (value.equals("Interest Income")) return INTEREST_INCOME;
        if (value.equals("Investment Expenses")) return INVESTMENT_EXPENSES;
        if (value.equals("Jewellery and Watches")) return JEWELLERY_AND_WATCHES;
        if (value.equals("Life Insurance")) return LIFE_INSURANCE;
        if (value.equals("Medical and Health")) return MEDICAL_AND_HEALTH;
        if (value.equals("Mortgage Repayments")) return MORTGAGE_REPAYMENTS;
        if (value.equals("Net Salary")) return NET_SALARY;
        if (value.equals("Nursing Home Charges")) return NURSING_HOME_CHARGES;
        if (value.equals("Other")) return OTHER;
        if (value.equals("Other Income")) return OTHER_INCOME;
        if (value.equals("Other Insurance")) return OTHER_INSURANCE;
        if (value.equals("Personal Care")) return PERSONAL_CARE;
        if (value.equals("Private Pension Income")) return PRIVATE_PENSION_INCOME;
        if (value.equals("Private Schooling Expenses")) return PRIVATE_SCHOOLING_EXPENSES;
        if (value.equals("Professional Services, Union and Association Fees")) return PROFESSIONAL_SERVICES_UNION_AND_ASSOCIATION_FEES;
        if (value.equals("Property Maintenance")) return PROPERTY_MAINTENANCE;
        if (value.equals("Public or Government Primary and Secondary Education")) return PUBLIC_OR_GOVERNMENT_PRIMARY_AND_SECONDARY_EDUCATION;
        if (value.equals("Purchase of Property")) return PURCHASE_OF_PROPERTY;
        if (value.equals("Recreation and Entertainment")) return RECREATION_AND_ENTERTAINMENT;
        if (value.equals("Rental Income")) return RENTAL_INCOME;
        if (value.equals("Rent Payments")) return RENT_PAYMENTS;
        if (value.equals("Sickness and Personal Accident Insurance")) return SICKNESS_AND_PERSONAL_ACCIDENT_INSURANCE;
        if (value.equals("Strata Fees")) return STRATA_FEES;
        if (value.equals("Superannuation Income")) return SUPERANNUATION_INCOME;
        if (value.equals("Superannuation Payments")) return SUPERANNUATION_PAYMENTS;
        if (value.equals("Tax and Government Fees and Payments")) return TAX_AND_GOVERNMENT_FEES_AND_PAYMENTS;
        if (value.equals("Tax Refund")) return TAX_REFUND;
        if (value.equals("Telephone, Internet, Pay TV and Media Streaming Subscriptions")) return TELEPHONE_INTERNET_PAY_TV_AND_MEDIA_STREAMING_SUBSCRIPTIONS;
        if (value.equals("Transport")) return TRANSPORT;
        if (value.equals("Utilities")) return UTILITIES;
        if (value.equals("Vehicle Insurance")) return VEHICLE_INSURANCE;
        if (value.equals("Vehicle Purchase")) return VEHICLE_PURCHASE;
        if (value.equals("Workers Compensation Income")) return WORKERS_COMPENSATION_INCOME;
        throw new IOException("Cannot deserialize AggregatedTransactionsCategoryTypeList");
    }
}
